[
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "target",
        "type": "address"
      }
    ],
    "name": "AddressEmptyCode",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "implementation",
        "type": "address"
      }
    ],
    "name": "ERC1967InvalidImplementation",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ERC1967NonPayable",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FailedCall",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidInitialization",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotInitializing",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OwnableInvalidOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "OwnableUnauthorizedAccount",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "UUPSUnauthorizedCallContext",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "slot",
        "type": "bytes32"
      }
    ],
    "name": "UUPSUnsupportedProxiableUUID",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "version",
        "type": "uint64"
      }
    ],
    "name": "Initialized",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "implementation",
        "type": "address"
      }
    ],
    "name": "Upgraded",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "UPGRADE_INTERFACE_VERSION",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "configContract",
    "outputs": [
      {
        "internalType": "contract StakingConfig",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "cpnftContract",
    "outputs": [
      {
        "internalType": "contract CPNFT",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getBasicConfig",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "minStakeDays",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "earlyWithdrawPenalty",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "quarterlyMultiplier",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getComboConfig",
    "outputs": [
      {
        "internalType": "uint256[3]",
        "name": "thresholds",
        "type": "uint256[3]"
      },
      {
        "internalType": "uint256[3]",
        "name": "bonuses",
        "type": "uint256[3]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint8",
        "name": "level",
        "type": "uint8"
      }
    ],
    "name": "getComboInfo",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "count",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "currentBonus",
        "type": "uint256"
      },
      {
        "internalType": "uint256[3]",
        "name": "thresholds",
        "type": "uint256[3]"
      },
      {
        "internalType": "uint256[3]",
        "name": "bonuses",
        "type": "uint256[3]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint8",
        "name": "level",
        "type": "uint8"
      }
    ],
    "name": "getDailyReward",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getLevelStats",
    "outputs": [
      {
        "internalType": "uint256[7]",
        "name": "stakedCounts",
        "type": "uint256[7]"
      },
      {
        "internalType": "uint256[7]",
        "name": "supplies",
        "type": "uint256[7]"
      },
      {
        "internalType": "uint256[7]",
        "name": "stakingRatios",
        "type": "uint256[7]"
      },
      {
        "internalType": "uint256[7]",
        "name": "dynamicMultipliers",
        "type": "uint256[7]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "getNFTDailyRewardBreakdown",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "baseReward",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "decayedReward",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "comboBonus",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "dynamicMultiplier",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "finalReward",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "getPendingRewards",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getPlatformStats",
    "outputs": [
      {
        "internalType": "uint256[7]",
        "name": "staked",
        "type": "uint256[7]"
      },
      {
        "internalType": "uint256[7]",
        "name": "supply",
        "type": "uint256[7]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      }
    ],
    "name": "getStakeDetails",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "level",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "stakeTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastClaimTime",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "totalRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "pendingRewards",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "continuousBonusClaimed",
            "type": "bool"
          }
        ],
        "internalType": "struct Staking.StakeInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "getUserComboSummary",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256[6]",
            "name": "currentComboCounts",
            "type": "uint256[6]"
          },
          {
            "internalType": "uint256[6]",
            "name": "comboBonus",
            "type": "uint256[6]"
          },
          {
            "internalType": "uint256[6]",
            "name": "nextComboThreshold",
            "type": "uint256[6]"
          },
          {
            "internalType": "bool[6]",
            "name": "hasPendingCombo",
            "type": "bool[6]"
          }
        ],
        "internalType": "struct StakingReader.UserComboSummary",
        "name": "summary",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "getUserDailyRewards",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "totalBaseReward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalDecayedReward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalComboBonus",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalDynamicMultiplier",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalFinalReward",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalBonus",
            "type": "uint256"
          },
          {
            "internalType": "uint256[6]",
            "name": "baseRewardPerLevel",
            "type": "uint256[6]"
          },
          {
            "internalType": "uint256[6]",
            "name": "finalRewardPerLevel",
            "type": "uint256[6]"
          },
          {
            "internalType": "uint256[6]",
            "name": "nftCountPerLevel",
            "type": "uint256[6]"
          }
        ],
        "internalType": "struct StakingReader.UserDailyRewards",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint8",
        "name": "level",
        "type": "uint8"
      }
    ],
    "name": "getUserDailyRewardsByLevel",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "baseReward",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "finalReward",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "nftCount",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "getUserRewardStats",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "totalHistoricalRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalPendingRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256[6]",
            "name": "rewardsPerLevel",
            "type": "uint256[6]"
          },
          {
            "internalType": "uint256",
            "name": "last24HoursRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "averageDailyRewards",
            "type": "uint256"
          }
        ],
        "internalType": "struct StakingReader.UserRewardStats",
        "name": "stats",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "offset",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "limit",
        "type": "uint256"
      }
    ],
    "name": "getUserStakedNFTs",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "level",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "stakingDuration",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "pendingRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "effectiveMultiplier",
            "type": "uint256"
          }
        ],
        "internalType": "struct StakingReader.StakedNFTInfo[]",
        "name": "nfts",
        "type": "tuple[]"
      },
      {
        "internalType": "uint256",
        "name": "total",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "getUserStakingSummary",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "totalStakedCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalClaimedRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalPendingRewards",
            "type": "uint256"
          },
          {
            "internalType": "uint256[6]",
            "name": "levelStakingCounts",
            "type": "uint256[6]"
          },
          {
            "internalType": "uint256",
            "name": "longestStakingDuration",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalEffectiveMultiplier",
            "type": "uint256"
          }
        ],
        "internalType": "struct StakingReader.UserStakingSummary",
        "name": "summary",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getVersions",
    "outputs": [
      {
        "internalType": "string",
        "name": "stakingVersion",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "configVersion",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_stakingContract",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_configContract",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_cpnftContract",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_owner",
        "type": "address"
      }
    ],
    "name": "initialize",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "proxiableUUID",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "stakingContract",
    "outputs": [
      {
        "internalType": "contract Staking",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_stakingContract",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_configContract",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_cpnftContract",
        "type": "address"
      }
    ],
    "name": "updateContracts",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newImplementation",
        "type": "address"
      },
      {
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "upgradeToAndCall",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  }
]
